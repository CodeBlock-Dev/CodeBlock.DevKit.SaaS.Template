@inject ApplicationSettings ApplicationSettings
@inject IJSRuntime JSRuntime

<nav class="navbar navbar-expand-lg">
    <div class="container">
        <a class="navbar-brand" href="#home">
            <img src="images/logos/logo.png" alt="@ApplicationSettings.Localized.Name" height="40" class="me-2" />
            @ApplicationSettings.Localized.Name
        </a>

        <!-- Mobile menu button and language selector -->
        <div class="d-lg-none d-flex align-items-center">
            <SelectLanguage BtnCssClass="btn btn-outline-light border-0 me-2"
                            ShowIcon="true"
                            ShowShortName="true"
                            ShowSelectedItem="true"
                            IconCssClass="text-secondary fs-5"
                            WrapperCssClass="language-selector-mobile" />
            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>

        <!-- Single Navigation Menu - Works for both desktop and mobile -->
        <div class="navbar-nav-container">
            <ul class="navbar-nav responsive-nav" id="singleNavMenu">
                <li class="nav-item">
                    <a class="nav-link" href="#home" data-bs-dismiss="offcanvas" data-scroll-to-section="true">@WebAppLocalizer[WebAppResource.Nav_Home]</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#pricing" data-bs-dismiss="offcanvas" data-scroll-to-section="true">@WebAppLocalizer[WebAppResource.Nav_Pricing]</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-bs-dismiss="offcanvas">@WebAppLocalizer[WebAppResource.Nav_Contact]</a>
                </li>
                <li class="nav-item language-selector-desktop">
                    <SelectLanguage BtnCssClass="btn btn-outline-light border-0"
                                    ShowIcon="true"
                                    ShowShortName="true"
                                    ShowSelectedItem="true"
                                    IconCssClass="text-secondary"
                                    SelectedItemCssClass="text-secondary ms-1"
                                    WrapperCssClass="language-selector" />
                </li>
                <li class="nav-item dashboard-btn">
                    @if (CurrentUser.IsAuthenticated())
                    {
                        <a class="btn btn-warning-gradient" href="/dashboard">
                            <i class="bi bi-box-arrow-in-right"></i>
                            @WebAppLocalizer[WebAppResource.Nav_Dashboard]
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-primary-gradient" href="/dashboard">
                            <i class="bi bi-box-arrow-in-right"></i>
                            @WebAppLocalizer[WebAppResource.Nav_Login]
                        </a>
                    }
                </li>
            </ul>
        </div>
    </div>
</nav>

<!-- Offcanvas Mobile Menu -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
    <div class="offcanvas-header">
        <div class="d-flex align-items-center">
            <img src="images/logos/logo.png" alt="@ApplicationSettings.Localized.Name" height="30" class="me-2" />
            <h5 class="offcanvas-title mb-0" id="offcanvasNavbarLabel">@ApplicationSettings.Localized.Name</h5>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <ul class="navbar-nav justify-content-end flex-grow-1 pe-3" id="offcanvasNavMenu">
            <!-- Navigation items will be cloned here by JavaScript -->
        </ul>
    </div>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("setupSingleNavMenu");
        }
    }
}
